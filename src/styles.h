/*
 * styles.h - Filling styles
 *
 * Copyright (c) 1999 Caldera, Inc. and Authors:
 *
 *  SCC
 *
 * This file is distributed under the GPL, version 2 or at your
 * option any later version.  See doc/license.txt for details.
 */



#ifndef _STYLES_H
#define _STYLES_H

/* the six predefined line styles */
unsigned short LINE_STYLE[7] = { 0xffff, 0xfff0, 0xc0c0, 0xff18, 0xff00, 0xf191, 0x000f };

/* the storage for the used defined fill pattern */

short UDPATMSK = 0xf;

short ROM_UD_PATRN[16] =
{
    0x07e0, 0x0ff0, 0x1fd8, 0x1808, 0x1808, 0x1008, 0x1e78, 0x1348,
    0x1108, 0x0810, 0x0b70, 0x0650, 0x07a0, 0x1e20, 0x1bc0, 0x1800
};

short PATTERNLEN = 7;
short PATTERNS[128] =
{
    /* Brick */
    0xffff, 0x8080, 0x8080, 0x8080, 0xffff, 0x0808, 0x0808, 0x0808,
    /* Diagonal Bricks */
    0x2020, 0x4040, 0x8080, 0x4141, 0x2222, 0x1414, 0x0808, 0x1010,
    /* Grass */
    0x0000, 0x0000, 0x1010, 0x2828, 0x0000, 0x0000, 0x0101, 0x8282,
    /* Trees */
    0x0202, 0x0202, 0xaaaa, 0x5050, 0x2020, 0x2020, 0xaaaa, 0x0505,
    /* Dashed x's */
    0x4040, 0x8080, 0x0000, 0x0808, 0x0404, 0x0202, 0x0000, 0x2020,
    /* Cobble Stones */
    0x6606, 0xc6c6, 0xd8d8, 0x1818, 0x8181, 0x8db1, 0x0c33, 0x6000,
    /* Sand */
    0x0000, 0x0000, 0x0400, 0x0000, 0x0010, 0x0000, 0x8000, 0x0000,
    /* Rough Weave */
    0xf8f8, 0x6c6c, 0xc6c6, 0x8f8f, 0x1f1f, 0x3636, 0x6363, 0xf1f1,
    /* Quilt */
    0xaaaa, 0x0000, 0x8888, 0x1414, 0x2222, 0x4141, 0x8888, 0x0000,
    /* Paterned Cross */
    0x0808, 0x0000, 0xaaaa, 0x0000, 0x0808, 0x0000, 0x8888, 0x0000,
    /* Balls */
    0x7777, 0x9898, 0xf8f8, 0xf8f8, 0x7777, 0x8989, 0x8f8f, 0x8f8f,
    /* Verticle Scales */
    0x8080, 0x8080, 0x4141, 0x3e3e, 0x0808, 0x0808, 0x1414, 0xe3e3,
    /* Diagonal scales */
    0x8181, 0x4242, 0x2424, 0x1818, 0x0606, 0x0101, 0x8080, 0x8080,
    /* Checker Board */
    0xf0f0, 0xf0f0, 0xf0f0, 0xf0f0, 0x0f0f, 0x0f0f, 0x0f0f, 0x0f0f,
    /* Filled Diamond */
    0x0808, 0x1c1c, 0x3e3e, 0x7f7f, 0xffff, 0x7f7f, 0x3e3e, 0x1c1c,
    /* Herringbone */
    0x1111, 0x2222, 0x4444, 0xffff, 0x8888, 0x4444, 0x2222, 0xffff
};

short DITHERLEN = 3;              /* mask off all but four scans */
short DITHER[32] =
{
    0x0000, 0x4444, 0x0000, 0x1111,     /* intensity level 2 */
    0x0000, 0x5555, 0x0000, 0x5555,     /* intensity level 4 */
    0x8888, 0x5555, 0x2222, 0x5555,     /* intensity level 6 */
    0xaaaa, 0x5555, 0xaaaa, 0x5555,     /* intensity level 8 */
    0xaaaa, 0xdddd, 0xaaaa, 0x7777,     /* intensity level 10 */
    0xaaaa, 0xffff, 0xaaaa, 0xffff,     /* intensity level 12 */
    0xeeee, 0xffff, 0xbbbb, 0xffff,     /* intensity level 14 */
    0xffff, 0xffff, 0xffff, 0xffff      /* intensity level 16 */
};

short HATCH0LEN = 7;
short HATCH0[48] =
{
    /* narrow spaced + 45 */
    0x0101, 0x0202, 0x0404, 0x0808, 0x1010, 0x2020, 0x4040, 0x8080,
    /* medium spaced thick 45 deg */
    0x6060, 0xc0c0, 0x8181, 0x0303, 0x0606, 0x0c0c, 0x1818, 0x3030,
    /* medium +-45 deg */
    0x4242, 0x8181, 0x8181, 0x4242, 0x2424, 0x1818, 0x1818, 0x2424,
    /* medium spaced vertical */
    0x8080, 0x8080, 0x8080, 0x8080, 0x8080, 0x8080, 0x8080, 0x8080,
    /* medium spaced horizontal */
    0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    /* medium spaced cross */
    0xffff, 0x8080, 0x8080, 0x8080, 0x8080, 0x8080, 0x8080, 0x8080
};

short HATCH1LEN = 0xF;
short HATCH1[96] =
{
    /* wide +45 deg */
    0x0001, 0x0002, 0x0004, 0x0008, 0x0010, 0x0020, 0x0040, 0x0080,
    0x0100, 0x0200, 0x0400, 0x0800, 0x1000, 0x2000, 0x4000, 0x8000,
    /* widely spaced thick 45 deg */
    0x8003, 0x0007, 0x000e, 0x001c, 0x0038, 0x0070, 0x00e0, 0x01c0,
    0x0380, 0x0700, 0x0e00, 0x1c00, 0x3800, 0x7000, 0x0e000, 0x0c001,
    /* widely +- 45 deg */
    0x8001, 0x4002, 0x2004, 0x1008, 0x0810, 0x0420, 0x0240, 0x0180,
    0x0180, 0x0240, 0x0420, 0x0810, 0x1008, 0x2004, 0x4002, 0x8001,
    /* widely spaced vertical */
    0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000,
    0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000,
    /* widely spaced horizontal */
    0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
    /* widely spaced horizontal/vert cross */
    0xffff, 0x8080, 0x8080, 0x8080, 0x8080, 0x8080, 0x8080, 0x8080,
    0xffff, 0x8080, 0x8080, 0x8080, 0x8080, 0x8080, 0x8080, 0x8080,
};

short HOLLOW = 0;
short SOLID = 0xFFFF;


#endif	/* _STYLES_H */
